version: "3"
services:
  api:
    restart: always
    image: api
    build: ./api
    container_name: token-api
    expose:
      - 8080
    environment:
      - VIRTUAL_HOST=token.dappnode.io
      - VIRTUAL_NETWORK=nginx-proxy
      - VIRTUAL_PORT=8080
      - LETSENCRYPT_HOST=token.dappnode.io
      - LETSENCRYPT_EMAIL=info@dappnode.io
    volumes:
      - "token-db:/usr/src/app/db.json"

  nginx:
    image: nginx
    container_name: token-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "nginx-config:/etc/nginx/conf.d"
      - "nginx-certs:/etc/nginx/certs"
      - "nginx-vhosts:/etc/nginx/vhost.d"
      - "nginx-webroot:/usr/share/nginx/html"

  dockergen:
    image: jwilder/docker-gen
    container_name: nginx-docker-gen
    command: -notify-sighup nginx -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes:
      - "nginx-config:/etc/nginx/conf.d"
      - "nginx-certs:/etc/nginx/certs"
      - "nginx-vhosts:/etc/nginx/vhost.d"
      - "nginx-webroot:/usr/share/nginx/html"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "./nginx/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    environment:
      NGINX_DOCKER_GEN_CONTAINER: nginx-docker-gen
      NGINX_PROXY_CONTAINER: nginx
    volumes:
      - "nginx-config:/etc/nginx/conf.d"
      - "nginx-certs:/etc/nginx/certs"
      - "nginx-vhosts:/etc/nginx/vhost.d"
      - "nginx-webroot:/usr/share/nginx/html"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

volumes:
  token-db:
  nginx-config:
  nginx-certs:
  nginx-vhosts:
  nginx-webroot:

networks:
  default:
    external:
      name: nginx-proxy
